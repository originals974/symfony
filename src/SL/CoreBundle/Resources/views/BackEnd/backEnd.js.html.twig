<script type="text/javascript">    
	$(document).ready(function () {

		//Default BootstrapSwitch parameter
        $.fn.bootstrapSwitch.defaults.size = 'mini';
        $.fn.bootstrapSwitch.defaults.onColor = "success"; 
        $.fn.bootstrapSwitch.defaults.offColor = "danger"; 

        //JsTree on change event
		$('#jstree')
		.on('changed.jstree', function (e, data) {
			$htmlTarget = '#backEndSection'; 
			$($htmlTarget).html(null);

			var i, j;

		    for(i = 0, j = data.selected.length; i < j; i++) {
		    	var $url = data.instance.get_node(data.selected[0]).a_attr['href']; 
		    }

		    if($url != null && $url != '#' ) {
		    	$target = '#backEndSection'; 
		    	sendToAjaxBackEnd('POST', $url, null, $htmlTarget);		    			    	
		    }
		})
		//JsTree configuration init
		.jstree({
			"core" : {
			    "check_callback" : true,
			    "multiple" : false,
		    },
		    "dnd" : { 
		    	"is_draggable" : function (data) { 
		    		return false; 
		    	},
				"copy" : false ,
			},
			"state" : { 
				"key" : "lateralBackEndMenu" ,
			},
    		"plugins" : [ "state", "dnd", "wholerow" ],
		});

		//When submit a form
		$(document).on('submit', 'form', function(event) {
			$(this).find('button[type="submit"]').attr('disabled', true);
            submitFormToAjaxBackEnd($(this));
            return false;
        });


		/**
	     * Process submitted form by using ajax
	     *
	     * @param $form Submitted form
	     */
        function submitFormToAjaxBackEnd($form) {

        	var method, validTarget, modalId, jsTree, selectedNode, newNode; 
        	
        	method = $form.find('input[name="_method"]').attr('value'); 
        	if(method == null) {
        		method = $form.attr('method');	
        	}
        	validTarget = '#'+$form.attr('valid-target'); 

            $.ajax({
                type : method,
                url : $form.attr('action'),
                data : $form.serializeArray(),
                dataType : "json",    
                success: function(data) {

                	if(data.isValid) {

                		//Get modal id  
		            	modalId = '#'+$($form).parent().parent().attr('id');

		            	//Process JsTree data
            			if(data.content.js_tree != null) {

            				//Get selected node
            				jsTree = $('#jstree').jstree(true);
            				selectedNode = jsTree.get_selected();  
            				

            				if(method.toUpperCase() == 'POST') {

								newNode = jsTree.create_node(selectedNode,data.content.js_tree);

								//Select New Node
								jsTree.open_node(selectedNode); 
								jsTree.deselect_node(selectedNode);
								jsTree.select_node(newNode); 
							}
							else if(method.toUpperCase() == 'PUT') {

								//If we have to change parent node
								if(data.content.js_tree.new_parent_id != null){ 
									jsTree.move_node(selectedNode, data.content.js_tree.new_parent_id); 
									jsTree.rename_node(selectedNode, data.content.js_tree.new_name);
								}
								else{
									jsTree.rename_node(selectedNode, data.content.js_tree);
								}
			            	}
			            	else if(method.toUpperCase() == 'DELETE') {

			            		//If we have to change parent node
								if(data.content.js_tree == 'change_parent'){ 
			            			jsTree.open_node(selectedNode);
			            			childrenNode = jsTree.get_children_dom(selectedNode);
			            			parentNode = jsTree.get_parent(selectedNode);

			            			$.each(childrenNode, function(key, value){
			            				jsTree.move_node($(value).attr('id'), parentNode); 
			            			});				            		
				            	}
			            		jsTree.delete_node(selectedNode); 
			            	}
            			}

            			//Process html data
            			if(data.content.html != null) {
            				$(validTarget).html(data.content.html);
            				$('button[role="iconpicker"]').iconpicker();
            			}
                		
                		//Close the modal
                        $(modalId).modal('hide'); 
		            }
		            else {
						$('#ajax-modal').html(data.content.html);
		            }
                },
                error: function(data) {
                    alert('error');
                }
            });
        };

        //When choose property type in property choice form
        $(document).on("change", 'form[name="property_choice"]', function(event){
		    var $data, $form, $htmlTarget; 

		    $data = { formMode : $(this).find('input[type="radio"]:checked').val()}; 
		    $form = $(this); 
		    $htmlTarget = "#ajax-modal"; 

		    sendToAjaxBackEnd($form.attr('method'), $form.attr('action'), $data, $htmlTarget);
		});

        //When select an icon by using iconpicker button
        $(document).on("change", 'button[role="iconpicker"]', function(event){
		   	var $button, jsTree, selectedNode; 

		   	$button = $(this); 

			jsTree = $('#jstree').jstree(true);
			selectedNode = String(jsTree.get_selected());  

			//Update icon for object node
			if(selectedNode.search("Object") != -1) {	
				jsTree.set_icon(selectedNode, 'fa '+event.icon); 
			}    

		    sendToAjaxBackEnd('PUT', $button.attr('ajax-action'), {icon : event.icon}, null);
		});

        //When change the state of a checkbox
        $(document).on("change", 'input[type="checkbox"]', function(event){
		    $checkbox = $(this); 
		    sendToAjaxBackEnd('PUT', $checkbox.attr('ajax-action'), {name : $checkbox.attr("name"), value : $checkbox.is(':checked')}, null);
		});

        //When change state of switch button ON/OFF
        $(document).on('switchChange.bootstrapSwitch', 'input[skin="bootstrap-switch"]', function(event, state) {
        	var $bootstrapSwitch = $(this); 
		    sendToAjaxBackEnd('PUT', $bootstrapSwitch.attr('ajax-action'), {value : state}, null);
		});

        //When click on a button of calculated name form
        $(document).on('click', '#object_name_designer_button button', function(event) {
        	
        	var $button, $input, $initialValue; 
 
        	$button = $(this); 
        	$input = $('#object_calculated_name_calculatedName');
        	$input.insertAtCaret('%'+$button.attr('title')+'%');

		});

        //When an option of choice list with entity_property_targetObject id is select 
        $(document).on("change", '#entity_property_targetObject', function(event){
		   	copySelectedValueToInput($(this).attr('id'), 'entity_property_displayName')
		});

        //When an option of choice list with list_property_dataList id is select
        $(document).on("change", '#list_property_dataList', function(event){
		   	copySelectedValueToInput($(this).attr('id'), 'list_property_displayName')
		});

        /**
	     * Copy select value of a choice list to an input element
	     *
	     * @param String selectedId 
	     * @param String inputId
	     */
        function copySelectedValueToInput(selectedId, inputId){
        	var selectedText; 

			selectedText = $('#'+selectedId).find('option:selected').text();
			$('#'+inputId).val(selectedText);
        }

        /**
	     * Submit data by using ajax
	     *
	     * @param String $method Ajax method used to send data
	     * @param String $url  Url where data are send
	     * @param JSonArray $data Data to send
	     * @param String $htmlTarget Html section to modify after success
	     */
		function sendToAjaxBackEnd($method, $url, $data, $htmlTarget) {
        	
			var jsTree, selectedNode; 

        	$.ajax({
		        type: $method,
		        url: $url,
		        data: $data,
		        success: function(data) {
		        	
		        	if($htmlTarget != null) {
		        		$($htmlTarget).html(data);
		            	$('button[role="iconpicker"]').iconpicker();
		            	$('input[skin="bootstrap-switch"]').bootstrapSwitch();
		        	}
		        },
		        error: function(data) {	           
			        alert('error');
		        }
		    }); 
        };
	}); 
</script>